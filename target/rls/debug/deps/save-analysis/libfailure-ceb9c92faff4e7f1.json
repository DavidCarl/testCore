{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8","program":"/home/carl/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","failure","/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=ceb9c92faff4e7f1","-C","extra-filename=-ceb9c92faff4e7f1","--out-dir","/home/carl/Documents/git/github/davidcarl/oscore/target/rls/debug/deps","-L","dependency=/home/carl/Documents/git/github/davidcarl/oscore/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/carl/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/carl/Documents/git/github/davidcarl/oscore/target/rls/debug/deps/libfailure-ceb9c92faff4e7f1.rmeta"},"prelude":{"crate_id":{"name":"failure","disambiguator":[15947068356205240526,0]},"crate_root":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src","external_crates":[{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}}],"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":0,"byte_end":9799,"line_start":1,"line_end":307,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1710,"byte_end":1716,"line_start":47,"line_end":47,"column_start":18,"column_end":24},"alias_span":null,"name":"AsFail","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1737,"byte_end":1746,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1764,"byte_end":1770,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"Compat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1789,"byte_end":1796,"line_start":50,"line_end":50,"column_start":18,"column_end":25},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1818,"byte_end":1827,"line_start":51,"line_end":51,"column_start":21,"column_end":30},"alias_span":null,"name":"ResultExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":0,"byte_end":9799,"line_start":1,"line_end":307,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":18},{"krate":0,"index":31},{"krate":0,"index":46},{"krate":0,"index":63},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":133},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":151}],"decl_id":null,"docs":" An experimental new error-handling library. Guide-style introduction\n is available [here](https://boats.gitlab.io/failure/).","sig":null,"attributes":[{"value":"/ An experimental new error-handling library. Guide-style introduction","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ is available [here](https://boats.gitlab.io/failure/).","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":73,"byte_end":131,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":132,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The primary items exported by this library are:","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":136,"byte_end":187,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":188,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `Fail`: a new trait for custom error types in Rust.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":192,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ - `Error`: a wrapper around `Fail` types to make it easy to coalesce them","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":250,"byte_end":327,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   at higher levels.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":328,"byte_end":351,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":352,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ As a general rule, library authors should create their own error types and","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":356,"byte_end":434,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ implement `Fail` for them, whereas application authors should primarily","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":435,"byte_end":510,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ deal with the `Error` type. There are exceptions to this rule, though, in","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":511,"byte_end":588,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ both directions, and users should do whatever seems most appropriate to","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":589,"byte_end":664,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ their situation.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":665,"byte_end":685,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":686,"byte_end":689,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Backtraces","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":690,"byte_end":707,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":708,"byte_end":711,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Backtraces are disabled by default. To turn backtraces on, enable","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":712,"byte_end":781,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ the `backtrace` Cargo feature and set the `RUST_BACKTRACE` environment","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":782,"byte_end":856,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ variable to a non-zero value (this also enables backtraces for panics).","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":857,"byte_end":932,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ Use the `RUST_FAILURE_BACKTRACE` variable to enable or disable backtraces","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":933,"byte_end":1010,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ for `failure` specifically.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1011,"byte_end":1042,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1077,"byte_end":1083,"line_start":23,"line_end":23,"column_start":35,"column_end":41}},{"value":"deny(missing_docs)","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1086,"byte_end":1108,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1109,"byte_end":1127,"line_start":25,"line_end":25,"column_start":1,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":10089,"byte_end":10095,"line_start":9,"line_end":9,"column_start":11,"column_end":17},"name":"AsFail","qualname":"::as_fail::AsFail","value":"AsFail","parent":null,"children":[{"krate":0,"index":12}],"decl_id":null,"docs":" The `AsFail` trait","sig":null,"attributes":[{"value":"/ The `AsFail` trait","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":9812,"byte_end":9834,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":9835,"byte_end":9838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait is similar to `AsRef<Fail>`, but it is specialized to handle","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":9839,"byte_end":9914,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ the dynamic object of `Fail`. Implementors of `Fail` have a blanket","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":9915,"byte_end":9986,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ implementation. It is used in `failure_derive` in order to generate a","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":9987,"byte_end":10060,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ custom cause.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":10061,"byte_end":10078,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":10183,"byte_end":10190,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"as_fail","qualname":"::as_fail::AsFail::as_fail","value":"pub fn as_fail(&Self) -> &dyn Fail","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Converts a reference to `Self` into a dynamic trait object of `Fail`.\n","sig":null,"attributes":[{"value":"/ Converts a reference to `Self` into a dynamic trait object of `Fail`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":10102,"byte_end":10175,"line_start":10,"line_end":10,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":12124,"byte_end":12133,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"Backtrace","qualname":"::backtrace::Backtrace","value":"Backtrace {  }","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" A `Backtrace`.","sig":null,"attributes":[{"value":"cfg(not(all(feature = \"backtrace\", feature = \"std\")))","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":10754,"byte_end":10810,"line_start":4,"line_end":4,"column_start":54,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":12632,"byte_end":12635,"line_start":42,"line_end":42,"column_start":16,"column_end":19},"name":"new","qualname":"<Backtrace>::new","value":"pub fn new() -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new backtrace. This will only create a real backtrace\n if the crate is compiled in std mode and the `RUST_BACKTRACE`\n environmental variable is activated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13313,"byte_end":13321,"line_start":62,"line_end":62,"column_start":16,"column_end":24},"name":"is_empty","qualname":"<Backtrace>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if displaying this backtrace would be an empty string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16613,"byte_end":16619,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Compat","qualname":"::compat::Compat","value":"Compat {  }","parent":null,"children":[{"krate":0,"index":165}],"decl_id":null,"docs":" A compatibility wrapper around an error type from this crate.","sig":null,"attributes":[{"value":"/ A compatibility wrapper around an error type from this crate.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16327,"byte_end":16392,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16393,"byte_end":16396,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `Compat` implements `std::error::Error`, allowing the types from this","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16397,"byte_end":16470,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ crate to be passed to interfaces that expect a type of that trait.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16471,"byte_end":16541,"line_start":6,"line_end":6,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16873,"byte_end":16883,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Compat<E>>::into_inner","value":"pub fn into_inner(Self) -> E","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this into the inner error.\n","sig":null,"attributes":[{"value":"/ Unwraps this into the inner error.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16823,"byte_end":16861,"line_start":19,"line_end":19,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16979,"byte_end":16986,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Compat<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner error.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the inner error.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16927,"byte_end":16967,"line_start":24,"line_end":24,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":18104,"byte_end":18111,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":194}],"decl_id":null,"docs":" An error with context around it.","sig":null,"attributes":[{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":1327,"byte_end":1355,"line_start":29,"line_end":29,"column_start":48,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":18321,"byte_end":18324,"line_start":20,"line_end":20,"column_start":16,"column_end":19},"name":"new","qualname":"<Context<D>>::new","value":"pub fn new(D) -> Context<D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new context without an underlying error message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":18484,"byte_end":18495,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"get_context","qualname":"<Context<D>>::get_context","value":"pub fn get_context(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the context provided with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":18658,"byte_end":18661,"line_start":30,"line_end":30,"column_start":16,"column_end":19},"name":"map","qualname":"<Context<D>>::map","value":"pub fn map<F, T>(Self, F) -> Context<T> where F: FnOnce(D) -> T, T: Display +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Maps `Context<D>` to `Context<T>` by applying a function to the contained context.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23376,"byte_end":23385,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"name":"ResultExt","qualname":"::result_ext::ResultExt","value":"ResultExt<T, E>","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" Extension methods for `Result`.\n","sig":null,"attributes":[{"value":"/ Extension methods for `Result`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23330,"byte_end":23365,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24908,"byte_end":24914,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"compat","qualname":"::result_ext::ResultExt::compat","value":"pub fn compat(Self) -> Result<T, Compat<E>>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Wraps the error in `Compat` to make it compatible with older error\n handling APIs that expect `std::error::Error`.","sig":null,"attributes":[{"value":"/ Wraps the error in `Compat` to make it compatible with older error","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23398,"byte_end":23468,"line_start":7,"line_end":7,"column_start":5,"column_end":75}},{"value":"/ handling APIs that expect `std::error::Error`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23473,"byte_end":23523,"line_start":8,"line_end":8,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23528,"byte_end":23531,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23536,"byte_end":23550,"line_start":10,"line_end":10,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23555,"byte_end":23558,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23563,"byte_end":23570,"line_start":12,"line_end":12,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23575,"byte_end":23592,"line_start":13,"line_end":13,"column_start":5,"column_end":22}},{"value":"/ #    tests::run_test();","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23597,"byte_end":23624,"line_start":14,"line_end":14,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23629,"byte_end":23636,"line_start":15,"line_end":15,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23641,"byte_end":23646,"line_start":16,"line_end":16,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(not(all(feature = \"std\", feature = \"derive\")))] mod tests { pub fn run_test() { } }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23651,"byte_end":23746,"line_start":17,"line_end":17,"column_start":5,"column_end":100}},{"value":"/ #  ","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23751,"byte_end":23758,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))] mod tests {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23763,"byte_end":23829,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23834,"byte_end":23860,"line_start":20,"line_end":20,"column_start":5,"column_end":31}},{"value":"/ # use std::fmt;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23865,"byte_end":23884,"line_start":21,"line_end":21,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23889,"byte_end":23894,"line_start":22,"line_end":22,"column_start":5,"column_end":10}},{"value":"/ # extern crate failure;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23899,"byte_end":23926,"line_start":23,"line_end":23,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23931,"byte_end":23936,"line_start":24,"line_end":24,"column_start":5,"column_end":10}},{"value":"/ # use tests::failure::ResultExt;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23941,"byte_end":23977,"line_start":25,"line_end":25,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23982,"byte_end":23987,"line_start":26,"line_end":26,"column_start":5,"column_end":10}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":23992,"byte_end":24014,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/ struct CustomError;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24019,"byte_end":24042,"line_start":28,"line_end":28,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24047,"byte_end":24050,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ impl Error for CustomError {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24055,"byte_end":24087,"line_start":30,"line_end":30,"column_start":5,"column_end":37}},{"value":"/     fn description(&self) -> &str {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24092,"byte_end":24131,"line_start":31,"line_end":31,"column_start":5,"column_end":44}},{"value":"/         \"My custom error message\"","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24136,"byte_end":24173,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24178,"byte_end":24187,"line_start":33,"line_end":33,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24192,"byte_end":24195,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/     fn cause(&self) -> Option<&Error> {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24200,"byte_end":24243,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/         None","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24248,"byte_end":24264,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24269,"byte_end":24278,"line_start":37,"line_end":37,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24283,"byte_end":24288,"line_start":38,"line_end":38,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24293,"byte_end":24298,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ # impl fmt::Display for CustomError {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24303,"byte_end":24344,"line_start":40,"line_end":40,"column_start":5,"column_end":46}},{"value":"/ #     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24349,"byte_end":24413,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/ #         write!(f, \"{}\", self.description())","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24418,"byte_end":24467,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24472,"byte_end":24483,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24488,"byte_end":24495,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24500,"byte_end":24505,"line_start":45,"line_end":45,"column_start":5,"column_end":10}},{"value":"/ # pub fn run_test() {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24510,"byte_end":24535,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24540,"byte_end":24543,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let x = (|| -> Result<(), failure::Error> {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24548,"byte_end":24595,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/     Err(CustomError).compat()?","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24600,"byte_end":24634,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ })().with_context(|e| {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24639,"byte_end":24666,"line_start":50,"line_end":50,"column_start":5,"column_end":32}},{"value":"/     format!(\"An error occured: {}\", e)","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24671,"byte_end":24713,"line_start":51,"line_end":51,"column_start":5,"column_end":47}},{"value":"/ }).unwrap_err();","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24718,"byte_end":24738,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24743,"byte_end":24746,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let x = format!(\"{}\", x);","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24751,"byte_end":24780,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24785,"byte_end":24788,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, \"An error occured: My custom error message\");","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24793,"byte_end":24856,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24861,"byte_end":24868,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24873,"byte_end":24876,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24881,"byte_end":24888,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24893,"byte_end":24900,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26025,"byte_end":26032,"line_start":101,"line_end":101,"column_start":8,"column_end":15},"name":"context","qualname":"::result_ext::ResultExt::context","value":"pub fn context<D>(Self, D) -> Result<T, Context<D>> where D: Display + Send +\nSync + 'static","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Wraps the error type in a context type.","sig":null,"attributes":[{"value":"/ Wraps the error type in a context type.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24951,"byte_end":24994,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":24999,"byte_end":25002,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25007,"byte_end":25021,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25026,"byte_end":25029,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25034,"byte_end":25041,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25046,"byte_end":25100,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/ # #[macro_use] extern crate failure;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25105,"byte_end":25145,"line_start":69,"line_end":69,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25150,"byte_end":25155,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25160,"byte_end":25214,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/ # #[macro_use] extern crate failure_derive;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25219,"byte_end":25266,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25271,"byte_end":25276,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25281,"byte_end":25298,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ #    tests::run_test();","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25303,"byte_end":25330,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25335,"byte_end":25342,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25347,"byte_end":25352,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(not(all(feature = \"std\", feature = \"derive\")))] mod tests { pub fn run_test() { } }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25357,"byte_end":25452,"line_start":78,"line_end":78,"column_start":5,"column_end":100}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25457,"byte_end":25462,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))] mod tests {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25467,"byte_end":25533,"line_start":80,"line_end":80,"column_start":5,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25538,"byte_end":25543,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ # use failure::{self, ResultExt};","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25548,"byte_end":25585,"line_start":82,"line_end":82,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25590,"byte_end":25595,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ #[derive(Fail, Debug)]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25600,"byte_end":25626,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ #[fail(display = \"\")]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25631,"byte_end":25656,"line_start":85,"line_end":85,"column_start":5,"column_end":30}},{"value":"/ struct CustomError;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25661,"byte_end":25684,"line_start":86,"line_end":86,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25689,"byte_end":25694,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # pub fn run_test() {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25699,"byte_end":25724,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/  ","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25729,"byte_end":25734,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ let x = (|| -> Result<(), failure::Error> {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25739,"byte_end":25786,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/     Err(CustomError)?","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25791,"byte_end":25816,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/ })().context(format!(\"An error occured\")).unwrap_err();","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25821,"byte_end":25880,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25885,"byte_end":25888,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let x = format!(\"{}\", x);","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25893,"byte_end":25922,"line_start":94,"line_end":94,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25927,"byte_end":25930,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, \"An error occured\");","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25935,"byte_end":25973,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25978,"byte_end":25985,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25990,"byte_end":25993,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":25998,"byte_end":26005,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26010,"byte_end":26017,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27346,"byte_end":27358,"line_start":146,"line_end":146,"column_start":8,"column_end":20},"name":"with_context","qualname":"::result_ext::ResultExt::with_context","value":"pub fn with_context<F, D>(Self, F) -> Result<T, Context<D>> where\nF: FnOnce(&E) -> D, D: Display + Send + Sync + 'static","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Wraps the error type in a context type generated by looking at the\n error value.","sig":null,"attributes":[{"value":"/ Wraps the error type in a context type generated by looking at the","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26138,"byte_end":26208,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ error value.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26213,"byte_end":26229,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26234,"byte_end":26237,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26242,"byte_end":26256,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26261,"byte_end":26264,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26269,"byte_end":26276,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26281,"byte_end":26335,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/ # #[macro_use] extern crate failure;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26340,"byte_end":26380,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26385,"byte_end":26390,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26395,"byte_end":26449,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ # #[macro_use] extern crate failure_derive;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26454,"byte_end":26501,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26506,"byte_end":26511,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26516,"byte_end":26533,"line_start":117,"line_end":117,"column_start":5,"column_end":22}},{"value":"/ #    tests::run_test();","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26538,"byte_end":26565,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26570,"byte_end":26577,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26582,"byte_end":26587,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(not(all(feature = \"std\", feature = \"derive\")))] mod tests { pub fn run_test() { } }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26592,"byte_end":26687,"line_start":121,"line_end":121,"column_start":5,"column_end":100}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26692,"byte_end":26697,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"derive\"))] mod tests {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26702,"byte_end":26768,"line_start":123,"line_end":123,"column_start":5,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26773,"byte_end":26778,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # use failure::{self, ResultExt};","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26783,"byte_end":26820,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26825,"byte_end":26830,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ #[derive(Fail, Debug)]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26835,"byte_end":26861,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ #[fail(display = \"My custom error message\")]","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26866,"byte_end":26914,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/ struct CustomError;","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26919,"byte_end":26942,"line_start":129,"line_end":129,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26947,"byte_end":26952,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # pub fn run_test() {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26957,"byte_end":26982,"line_start":131,"line_end":131,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26987,"byte_end":26990,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let x = (|| -> Result<(), failure::Error> {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":26995,"byte_end":27042,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/     Err(CustomError)?","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27047,"byte_end":27072,"line_start":134,"line_end":134,"column_start":5,"column_end":30}},{"value":"/ })().with_context(|e| {","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27077,"byte_end":27104,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/     format!(\"An error occured: {}\", e)","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27109,"byte_end":27151,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/ }).unwrap_err();","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27156,"byte_end":27176,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27181,"byte_end":27184,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let x = format!(\"{}\", x);","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27189,"byte_end":27218,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27223,"byte_end":27226,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, \"An error occured: My custom error message\");","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27231,"byte_end":27294,"line_start":141,"line_end":141,"column_start":5,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27299,"byte_end":27306,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27311,"byte_end":27314,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27319,"byte_end":27326,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27331,"byte_end":27338,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3500,"byte_end":3504,"line_start":108,"line_end":108,"column_start":11,"column_end":15},"name":"Fail","qualname":"::Fail","value":"Fail: Display + Debug + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" The `Fail` trait.","sig":null,"attributes":[{"value":"/ The `Fail` trait.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2357,"byte_end":2378,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2379,"byte_end":2382,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Implementors of this trait are called 'failures'.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2383,"byte_end":2436,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2437,"byte_end":2440,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ All error types should implement `Fail`, which provides a baseline of","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2441,"byte_end":2514,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ functionality that they all share.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2515,"byte_end":2553,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2554,"byte_end":2557,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `Fail` has no required methods, but it does require that your type","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2558,"byte_end":2628,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/ implement several other traits:","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2629,"byte_end":2664,"line_start":90,"line_end":90,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ - `Display`: to print a user-friendly representation of the error.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2669,"byte_end":2739,"line_start":92,"line_end":92,"column_start":1,"column_end":71}},{"value":"/ - `Debug`: to print a verbose, developer-focused representation of the","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2740,"byte_end":2814,"line_start":93,"line_end":93,"column_start":1,"column_end":75}},{"value":"/   error.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2815,"byte_end":2827,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/ - `Send + Sync`: Your error type is required to be safe to transfer to and","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2828,"byte_end":2906,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/   reference from another thread","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2907,"byte_end":2942,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2943,"byte_end":2946,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Additionally, all failures must be `'static`. This enables downcasting.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":2947,"byte_end":3022,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3023,"byte_end":3026,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ `Fail` provides several methods with default implementations. Two of these","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3027,"byte_end":3105,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ may be appropriate to override depending on the definition of your","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3106,"byte_end":3176,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/ particular failure: the `cause` and `backtrace` methods.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3177,"byte_end":3237,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3238,"byte_end":3241,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The `failure_derive` crate provides a way to derive the `Fail` trait for","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3242,"byte_end":3318,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ your type. Additionally, all types that already implement","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3319,"byte_end":3380,"line_start":105,"line_end":105,"column_start":1,"column_end":62}},{"value":"/ `std::error::Error`, and are also `Send`, `Sync`, and `'static`, implement","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3381,"byte_end":3459,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ `Fail` by a blanket impl.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3460,"byte_end":3489,"line_start":107,"line_end":107,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3857,"byte_end":3861,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"name","qualname":"::Fail::name","value":"pub fn name(&Self) -> Option<&str>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Returns the \"name\" of the error.\n \n This is typically the type name. Not all errors will implement\n this. This method is expected to be most useful in situations\n where errors need to be reported to external instrumentation systems \n such as crash reporters.\n","sig":null,"attributes":[{"value":"/ Returns the \"name\" of the error.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3552,"byte_end":3588,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ ","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3593,"byte_end":3597,"line_start":110,"line_end":110,"column_start":5,"column_end":9}},{"value":"/ This is typically the type name. Not all errors will implement","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3602,"byte_end":3668,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ this. This method is expected to be most useful in situations","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3673,"byte_end":3738,"line_start":112,"line_end":112,"column_start":5,"column_end":70}},{"value":"/ where errors need to be reported to external instrumentation systems ","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3743,"byte_end":3816,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ such as crash reporters.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3821,"byte_end":3849,"line_start":114,"line_end":114,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4426,"byte_end":4431,"line_start":129,"line_end":129,"column_start":8,"column_end":13},"name":"cause","qualname":"::Fail::cause","value":"pub fn cause(&Self) -> Option<&dyn Fail>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying cause of this failure, if it\n is an error that wraps other errors.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying cause of this failure, if it","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3911,"byte_end":3981,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ is an error that wraps other errors.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3986,"byte_end":4026,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4031,"byte_end":4034,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this failure does not have another error as its","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4039,"byte_end":4108,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ underlying cause. By default, this returns `None`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4113,"byte_end":4167,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4172,"byte_end":4175,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This should **never** return a reference to `self`, but only return","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4180,"byte_end":4251,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ `Some` when it can return a **different** failure. Users may loop","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4256,"byte_end":4325,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"/ over the cause chain, and returning `self` would result in an infinite","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4330,"byte_end":4404,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ loop.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4409,"byte_end":4418,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4704,"byte_end":4713,"line_start":138,"line_end":138,"column_start":8,"column_end":17},"name":"backtrace","qualname":"::Fail::backtrace","value":"pub fn backtrace(&Self) -> Option<&Backtrace>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Returns a reference to the `Backtrace` carried by this failure, if it\n carries one.","sig":null,"attributes":[{"value":"/ Returns a reference to the `Backtrace` carried by this failure, if it","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4486,"byte_end":4559,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ carries one.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4564,"byte_end":4580,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4585,"byte_end":4588,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this failure does not carry a backtrace. By","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4593,"byte_end":4658,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ default, this returns `None`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4663,"byte_end":4696,"line_start":137,"line_end":137,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5472,"byte_end":5479,"line_start":155,"line_end":155,"column_start":8,"column_end":15},"name":"context","qualname":"::Fail::context","value":"pub fn context<D>(Self, D) -> Context<D> where D: Display + Send + Sync +\n'static, Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Provides context for this failure.","sig":null,"attributes":[{"value":"/ Provides context for this failure.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4769,"byte_end":4807,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4812,"byte_end":4815,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This can provide additional information about this error, appropriate","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4820,"byte_end":4893,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ to the semantics of the current layer. That is, if you have a","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4898,"byte_end":4963,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/ lower-level error, such as an IO error, you can provide additional context","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":4968,"byte_end":5046,"line_start":146,"line_end":146,"column_start":5,"column_end":83}},{"value":"/ about what that error means in the context of your function. This","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5051,"byte_end":5120,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ gives users of this function more information about what has gone","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5125,"byte_end":5194,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/ wrong.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5199,"byte_end":5209,"line_start":149,"line_end":149,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5214,"byte_end":5217,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This takes any type that implements `Display`, as well as","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5222,"byte_end":5283,"line_start":151,"line_end":151,"column_start":5,"column_end":66}},{"value":"/ `Send`/`Sync`/`'static`. In practice, this means it can take a `String`","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5288,"byte_end":5363,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ or a string literal, or another failure, or some other custom context-carrying","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5368,"byte_end":5450,"line_start":153,"line_end":153,"column_start":5,"column_end":87}},{"value":"/ type.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5455,"byte_end":5464,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5901,"byte_end":5907,"line_start":168,"line_end":168,"column_start":8,"column_end":14},"name":"compat","qualname":"::Fail::compat","value":"pub fn compat(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Wraps this failure in a compatibility wrapper that implements\n `std::error::Error`.","sig":null,"attributes":[{"value":"/ Wraps this failure in a compatibility wrapper that implements","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5648,"byte_end":5713,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/ `std::error::Error`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5718,"byte_end":5742,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5747,"byte_end":5750,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This allows failures  to be compatible with older crates that","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5755,"byte_end":5820,"line_start":166,"line_end":166,"column_start":5,"column_end":70}},{"value":"/ expect types that implement the `Error` trait from `std::error`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":5825,"byte_end":5893,"line_start":167,"line_end":167,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6121,"byte_end":6127,"line_start":177,"line_end":177,"column_start":8,"column_end":14},"name":"causes","qualname":"::Fail::causes","value":"pub fn causes(&Self) -> Causes where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note =\n             \"please use the 'iter_chain()' method instead\")","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6028,"byte_end":6113,"line_start":176,"line_end":176,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6368,"byte_end":6378,"line_start":189,"line_end":189,"column_start":8,"column_end":18},"name":"root_cause","qualname":"::Fail::root_cause","value":"pub fn root_cause(&Self) -> &dyn Fail where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note =\n             \"please use the 'find_root_cause()' method instead\")","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6248,"byte_end":6360,"line_start":185,"line_end":188,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6499,"byte_end":6522,"line_start":197,"line_end":197,"column_start":8,"column_end":31},"name":"__private_get_type_id__","qualname":"::Fail::__private_get_type_id__","value":"pub fn __private_get_type_id__(&Self) -> TypeId","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6767,"byte_end":6779,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Fail>::downcast_ref","value":"pub fn downcast_ref<T: Fail>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast this failure to a concrete type by reference.","sig":null,"attributes":[{"value":"/ Attempts to downcast this failure to a concrete type by reference.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6600,"byte_end":6670,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6675,"byte_end":6678,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If the underlying error is not of type `T`, this will return `None`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":6683,"byte_end":6755,"line_start":205,"line_end":205,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7184,"byte_end":7196,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<dyn Fail>::downcast_mut","value":"pub fn downcast_mut<T: Fail>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast this failure to a concrete type by mutable\n reference.","sig":null,"attributes":[{"value":"/ Attempts to downcast this failure to a concrete type by mutable","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7001,"byte_end":7068,"line_start":214,"line_end":214,"column_start":5,"column_end":72}},{"value":"/ reference.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7073,"byte_end":7087,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7092,"byte_end":7095,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If the underlying error is not of type `T`, this will return `None`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7100,"byte_end":7172,"line_start":217,"line_end":217,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7787,"byte_end":7802,"line_start":234,"line_end":234,"column_start":12,"column_end":27},"name":"find_root_cause","qualname":"<dyn Fail>::find_root_cause","value":"pub fn find_root_cause(&Self) -> &dyn Fail","parent":null,"children":[],"decl_id":null,"docs":" Returns the \"root cause\" of this `Fail` - the last value in the\n cause chain which does not return an underlying `cause`.","sig":null,"attributes":[{"value":"/ Returns the \"root cause\" of this `Fail` - the last value in the","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7426,"byte_end":7493,"line_start":226,"line_end":226,"column_start":5,"column_end":72}},{"value":"/ cause chain which does not return an underlying `cause`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7498,"byte_end":7558,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7563,"byte_end":7566,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ If this type does not have a cause, `self` is returned, because","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7571,"byte_end":7638,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/ it is its own root cause.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7643,"byte_end":7672,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7677,"byte_end":7680,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to iterating over `iter_causes()` and taking","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7685,"byte_end":7752,"line_start":232,"line_end":232,"column_start":5,"column_end":72}},{"value":"/ the last item.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7757,"byte_end":7775,"line_start":233,"line_end":233,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8091,"byte_end":8102,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"iter_causes","qualname":"<dyn Fail>::iter_causes","value":"pub fn iter_causes(&Self) -> Causes","parent":null,"children":[],"decl_id":null,"docs":" Returns a iterator over the causes of this `Fail` with the cause\n of this fail as the first item and the `root_cause` as the final item.","sig":null,"attributes":[{"value":"/ Returns a iterator over the causes of this `Fail` with the cause","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7866,"byte_end":7934,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"/ of this fail as the first item and the `root_cause` as the final item.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":7939,"byte_end":8013,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8018,"byte_end":8021,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Use `iter_chain` to also include the fail itself.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8026,"byte_end":8079,"line_start":241,"line_end":241,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8512,"byte_end":8522,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"iter_chain","qualname":"<dyn Fail>::iter_chain","value":"pub fn iter_chain(&Self) -> Causes","parent":null,"children":[],"decl_id":null,"docs":" Returns a iterator over all fails up the chain from the current\n as the first item up to the `root_cause` as the final item.","sig":null,"attributes":[{"value":"/ Returns a iterator over all fails up the chain from the current","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8171,"byte_end":8238,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ as the first item up to the `root_cause` as the final item.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8243,"byte_end":8306,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8311,"byte_end":8314,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This means that the chain also includes the fail itself which","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8319,"byte_end":8384,"line_start":249,"line_end":249,"column_start":5,"column_end":70}},{"value":"/ means that it does *not* start with `cause`.  To skip the outermost","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8389,"byte_end":8460,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ fail use `iter_causes` instead.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8465,"byte_end":8500,"line_start":251,"line_end":251,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8760,"byte_end":8770,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"root_cause","qualname":"<dyn Fail>::root_cause","value":"pub fn root_cause(&Self) -> &dyn Fail","parent":null,"children":[],"decl_id":null,"docs":" Deprecated alias to `find_root_cause`.\n","sig":null,"attributes":[{"value":"/ Deprecated alias to `find_root_cause`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8589,"byte_end":8631,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"deprecated(since = \"0.1.2\", note =\n             \"please use the 'find_root_cause()' method instead\")","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8636,"byte_end":8748,"line_start":257,"line_end":260,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8973,"byte_end":8979,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"causes","qualname":"<dyn Fail>::causes","value":"pub fn causes(&Self) -> Causes","parent":null,"children":[],"decl_id":null,"docs":" Deprecated alias to `iter_chain`.\n","sig":null,"attributes":[{"value":"/ Deprecated alias to `iter_chain`.","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8834,"byte_end":8871,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"deprecated(since = \"0.1.2\", note =\n             \"please use the 'iter_chain()' method instead\")","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":8876,"byte_end":8961,"line_start":266,"line_end":266,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":9394,"byte_end":9400,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"Causes","qualname":"::Causes","value":"Causes {  }","parent":null,"children":[{"krate":0,"index":145}],"decl_id":null,"docs":" A iterator over the causes of a `Fail`\n","sig":null,"attributes":[{"value":"/ A iterator over the causes of a `Fail`","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":9340,"byte_end":9382,"line_start":286,"line_end":286,"column_start":1,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":10234,"byte_end":10235,"line_start":14,"line_end":14,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":12173,"byte_end":12182,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13394,"byte_end":13403,"line_start":67,"line_end":67,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13507,"byte_end":13516,"line_start":73,"line_end":73,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13639,"byte_end":13648,"line_start":79,"line_end":79,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16682,"byte_end":16688,"line_start":12,"line_end":12,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16807,"byte_end":16813,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":18222,"byte_end":18229,"line_start":18,"line_end":18,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":19062,"byte_end":19069,"line_start":44,"line_end":44,"column_start":55,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":19133,"byte_end":19140,"line_start":46,"line_end":46,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":19325,"byte_end":19332,"line_start":52,"line_end":52,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":23137,"byte_end":23144,"line_start":173,"line_end":173,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27518,"byte_end":27524,"line_start":152,"line_end":152,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":9464,"byte_end":9470,"line_start":291,"line_end":291,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/as_fail.rs","byte_start":10234,"byte_end":10235,"line_start":14,"line_end":14,"column_start":20,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":12173,"byte_end":12182,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13394,"byte_end":13403,"line_start":67,"line_end":67,"column_start":22,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13507,"byte_end":13516,"line_start":73,"line_end":73,"column_start":20,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/backtrace/mod.rs","byte_start":13639,"byte_end":13648,"line_start":79,"line_end":79,"column_start":22,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":9401}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16682,"byte_end":16688,"line_start":12,"line_end":12,"column_start":30,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":9401}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/compat.rs","byte_start":16807,"byte_end":16813,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":18222,"byte_end":18229,"line_start":18,"line_end":18,"column_start":46,"column_end":53},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":19062,"byte_end":19069,"line_start":44,"line_end":44,"column_start":55,"column_end":62},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":19133,"byte_end":19140,"line_start":46,"line_end":46,"column_start":56,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":192},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":19325,"byte_end":19332,"line_start":52,"line_end":52,"column_start":58,"column_end":65},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":192},"to":{"krate":1,"index":9401}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/context.rs","byte_start":23137,"byte_end":23144,"line_start":173,"line_end":173,"column_start":21,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":192},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/result_ext.rs","byte_start":27518,"byte_end":27524,"line_start":152,"line_end":152,"column_start":32,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":43563},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3506,"byte_end":3513,"line_start":108,"line_end":108,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":9401},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3516,"byte_end":3521,"line_start":108,"line_end":108,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":9394},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3524,"byte_end":3528,"line_start":108,"line_end":108,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3016},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":3531,"byte_end":3535,"line_start":108,"line_end":108,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":3028},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.8/src/lib.rs","byte_start":9464,"byte_end":9470,"line_start":291,"line_end":291,"column_start":23,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":143},"to":{"krate":1,"index":7646}}]}