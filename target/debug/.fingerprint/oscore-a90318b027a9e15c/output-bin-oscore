{"message":"no method named `offer` found for struct `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Eps>>>>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/session_types-0.3.1/src/lib.rs","byte_start":15587,"byte_end":15592,"line_start":553,"line_end":553,"column_start":19,"column_end":24,"is_primary":true,"text":[{"text":"        match $id.offer() {","highlight_start":19,"highlight_end":24}],"label":"method not found in `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Eps>>>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":1211,"byte_end":1360,"line_start":47,"line_end":54,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    offer! {c, ","highlight_start":5,"highlight_end":16},{"text":"        Vec => {","highlight_start":1,"highlight_end":17},{"text":"            let (c, msg1_bytes) = c.recv();//recv();","highlight_start":1,"highlight_end":53},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        Quit => {","highlight_start":1,"highlight_end":18},{"text":"            c.close();","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"offer!","def_site_span":{"file_name":"/home/carl/.cargo/registry/src/github.com-1ecc6299db9ec823/session_types-0.3.1/src/lib.rs","byte_start":15473,"byte_end":15795,"line_start":549,"line_end":563,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! offer {","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":1},{"text":"        $id:ident, $branch:ident => $code:expr, $($t:tt)+","highlight_start":1,"highlight_end":1},{"text":"    ) => (","highlight_start":1,"highlight_end":1},{"text":"        match $id.offer() {","highlight_start":1,"highlight_end":1},{"text":"            $crate::Left($id) => $code,","highlight_start":1,"highlight_end":1},{"text":"            $crate::Right($id) => offer!{ $id, $($t)+ }","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"    );","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":1},{"text":"        $id:ident, $branch:ident => $code:expr","highlight_start":1,"highlight_end":1},{"text":"    ) => (","highlight_start":1,"highlight_end":1},{"text":"        $code","highlight_start":1,"highlight_end":1},{"text":"    )","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the method was found for\n- `session_types::Chan<E, session_types::Offer<P, Q>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `offer` found for struct `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Eps>>>>` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:47:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    offer! {c, \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Vec => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let (c, msg1_bytes) = c.recv();//recv();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Eps>>>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the method was found for\u001b[0m\n\u001b[0m           - `session_types::Chan<E, session_types::Offer<P, Q>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `offer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `send` found for struct `session_types::Chan<(), session_types::Recv<Vec<u8>, session_types::Eps>>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1795,"byte_end":1799,"line_start":66,"line_end":66,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"    let c = c.sel1().send(msg2_bytes);","highlight_start":22,"highlight_end":26}],"label":"method not found in `session_types::Chan<(), session_types::Recv<Vec<u8>, session_types::Eps>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method was found for\n- `session_types::Chan<E, session_types::Send<A, P>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `send` found for struct `session_types::Chan<(), session_types::Recv<Vec<u8>, session_types::Eps>>` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let c = c.sel1().send(msg2_bytes);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `session_types::Chan<(), session_types::Recv<Vec<u8>, session_types::Eps>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the method was found for\u001b[0m\n\u001b[0m           - `session_types::Chan<E, session_types::Send<A, P>>`\u001b[0m\n\n"}
{"message":"no method named `recv` found for struct `session_types::Chan<(), session_types::Send<Vec<u8>, session_types::Eps>>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3517,"byte_end":3521,"line_start":110,"line_end":110,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"            let (c, msg1_bytes) = c.recv();//recv();","highlight_start":37,"highlight_end":41}],"label":"method not found in `session_types::Chan<(), session_types::Send<Vec<u8>, session_types::Eps>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method was found for\n- `session_types::Chan<E, session_types::Recv<A, P>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `recv` found for struct `session_types::Chan<(), session_types::Send<Vec<u8>, session_types::Eps>>` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:110:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let (c, msg1_bytes) = c.recv();//recv();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `session_types::Chan<(), session_types::Send<Vec<u8>, session_types::Eps>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the method was found for\u001b[0m\n\u001b[0m            - `session_types::Chan<E, session_types::Recv<A, P>>`\u001b[0m\n\n"}
{"message":"no method named `close` found for struct `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3577,"byte_end":3582,"line_start":113,"line_end":113,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"            c.close();","highlight_start":15,"highlight_end":20}],"label":"method not found in `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method was found for\n- `session_types::Chan<E, session_types::Eps>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `close` found for struct `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:113:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            c.close();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `session_types::Chan<(), session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the method was found for\u001b[0m\n\u001b[0m            - `session_types::Chan<E, session_types::Eps>`\u001b[0m\n\n"}
{"message":"no method named `recv` found for struct `session_types::Chan<(), session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3631,"byte_end":3635,"line_start":116,"line_end":116,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let (c, msg2_bytes) = c.recv();","highlight_start":29,"highlight_end":33}],"label":"method not found in `session_types::Chan<(), session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method was found for\n- `session_types::Chan<E, session_types::Recv<A, P>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `recv` found for struct `session_types::Chan<(), session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>>` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:116:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (c, msg2_bytes) = c.recv();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `session_types::Chan<(), session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Choose<session_types::Recv<Vec<u8>, session_types::Eps>, session_types::Offer<session_types::Send<Vec<u8>, session_types::Eps>, session_types::Eps>>>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the method was found for\u001b[0m\n\u001b[0m            - `session_types::Chan<E, session_types::Recv<A, P>>`\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}
